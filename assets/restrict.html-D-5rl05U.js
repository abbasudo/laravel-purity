import{_ as n,c as a,b as e,o as t}from"./app-DiMD2xtl.js";const p={};function l(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h3 id="global-filters" tabindex="-1"><a class="header-anchor" href="#global-filters"><span>Global Filters</span></a></h3><p>purity validates allowed filters in the following order of priority:</p><ul><li>Filters specified in the <code>filters</code> configuration in the <code>configs/purity.php</code> file.</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token comment">// configs/purity.php</span></span>
<span class="line"><span class="token string single-quoted-string">&#39;filters&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token class-name static-context">EqualFilter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name static-context">InFilter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Filters declared in the <code>$filters</code> variable in the model.</li></ul><p>note that $filters will overwrite config filters.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token comment">// App\\Models\\Post</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$filters</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;$in&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line"><span class="token comment">// or</span></span>
<span class="line">    </span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$filters</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token class-name static-context">EqualFilter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name static-context">InFilter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Filters passed as an array to the <code>filterBy()</code> function.</li></ul><p>note that, <code>filterBy</code> will overwrite all other defined filters.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">filterBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;$in&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// or</span></span>
<span class="line"><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">filterBy</span><span class="token punctuation">(</span><span class="token class-name static-context">EqualFilter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name static-context">InFilter</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="restrict-by-field" tabindex="-1"><a class="header-anchor" href="#restrict-by-field"><span>Restrict by Field</span></a></h3><p>There are three available Methods for your convenience. They take priority respectively.</p><ul><li><strong>Method 1: Define restricted filters inside <code>$filterFields</code> property, as shown below</strong></li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$filterFields</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// title will be limited to the eq operator</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// works only for one restricted operator</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title:$eq&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// same as above</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// this won&#39;t be restricted to any operator</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The drawback here is that you have to define all the allowed fields, regardless of any restriction fields.</p><ul><li><strong>Method 2: Define them inside <code>$restrictedFilters</code> property</strong></li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$restrictedFields</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// title will be limited to the eq operator</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title:$eq,$in&#39;</span>             <span class="token comment">// same as above</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;title&#39;</span>                     <span class="token comment">// this won&#39;t be restricted to any operator</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method 3: Finally, you can set it on the Eloquent builder, which takes the highest priority (overwrite all the above options)</strong></li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">restrictedFilters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>All field-restricted filter operations are respected to filters defined in $filter in the model. This means you are not allowed to restrict a field operation not permitted in restricted fields.</p></div><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token variable">$filters</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;$eq&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$restrictedFilters</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;$eqc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment">// This won&#39;t work</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const c=n(p,[["render",l],["__file","restrict.html.vue"]]),r=JSON.parse('{"path":"/advanced/filter/restrict.html","title":"Restrict","lang":"en-US","frontmatter":{"title":"Restrict","prev":{"text":"Silent Exceptions","link":"/advanced/silent"},"next":{"text":"Custom Filters","link":"/advanced/filter/custom"}},"headers":[{"level":3,"title":"Global Filters","slug":"global-filters","link":"#global-filters","children":[]},{"level":3,"title":"Restrict by Field","slug":"restrict-by-field","link":"#restrict-by-field","children":[]}],"git":{"updatedTime":1718398054000,"contributors":[{"name":"Abbas mkhzomi","email":"amkhzomi@gmail.com","commits":3}]},"filePathRelative":"advanced/filter/restrict.md"}');export{c as comp,r as data};
